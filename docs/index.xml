<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Adrestia User-Guide</title><link>https://input-output-hk.github.io/adrestia/docs/</link><description>Recent content in Docs on Adrestia User-Guide</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://input-output-hk.github.io/adrestia/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Architecture</title><link>https://input-output-hk.github.io/adrestia/docs/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://input-output-hk.github.io/adrestia/docs/architecture/</guid><description>High-Level Diagram mermaid.initialize({ flowchart: { useMaxWidth:true } }); erDiagram CARDANO-NODE ||--|{ CARDANO-SUBMIT-API : depends-on CARDANO-NODE ||--|{ CARDANO-WALLET : depends-on CARDANO-NODE ||--|{ CARDANO-DB-SYNC : depends-on CARDANO-DB-SYNC ||--|| POSTGRESQL : dumps-into POSTGRESQL ||--|| SMASH : is-queried POSTGRESQL ||--|| CARDANO-GRAPHQL : is-queried POSTGRESQL ||--|| CARDANO-ROSETTA : is-queried CARDANO-GRAPHQL ||--|{ EXPLORER : depends-on SMASH ||--|{ CARDANO-WALLET: connects-to CARDANO-WALLET ||--|{ DAEDALUS : depends-on Components cardano-node The core cardano-node, which participates in the Cardano network, and maintains the state of the Cardano blockchain ledger.</description></item><item><title>Installation Instructions</title><link>https://input-output-hk.github.io/adrestia/docs/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://input-output-hk.github.io/adrestia/docs/installation/</guid><description>Using Docker (recommended) Docker images are continuously built and deployed on dockerhub under specific tags. Using docker provides the fastest and easiest user experience for setting up the Cardano stack. You should prefer this solution over building from sources unless you have really good reasons not to. The following images are available for each component of the Adrestia architecture:
Repository Tags Documentation inputoutput/cardano-node master, MAJ.</description></item><item><title>API References</title><link>https://input-output-hk.github.io/adrestia/docs/api-references/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://input-output-hk.github.io/adrestia/docs/api-references/</guid><description>Components Component Link cardano-wallet https://input-output-hk.github.io/cardano-wallet/api/edge cardano-graphql https://input-output-hk.github.io/cardano-graphql/ cardano-rosetta https://github.com/input-output-hk/cardano-rosetta/tree/master/docs cardano-submit-api About cardano-wallet
Cardano-wallet comes with a command-line interface that can be used as a quick alternative to cURL or wget to interact with a server running on localhost. Every endpoint of the API is mapped to a corresponding command which often offers a better user experience than directly interacting with the API as a human (API are for programs, command-lines are for humans).</description></item><item><title>FAQ</title><link>https://input-output-hk.github.io/adrestia/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://input-output-hk.github.io/adrestia/docs/faq/</guid><description>Why aren&amp;#39;t my unused addresses imported when I restore a wallet? ... This is by virtue of the blockchain. An unused address is by definition unused. Meaning that is doesn&amp;rsquo;t exist on the chain and only exists locally, in the context of the software that has generated it. Different software may use different rules to generate addresses. For example in the past, cardano-sl wallets used a method called random derivation where addresses were created from a root seed and a random index stored within the address itself.</description></item></channel></rss>